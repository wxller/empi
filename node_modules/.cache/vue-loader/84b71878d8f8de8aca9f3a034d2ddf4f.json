{"remainingRequest":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wuxingliu/ylz_work/2020/statistics/src/components/ShareDoc.vue?vue&type=style&index=0&id=7bd6c889&scoped=true&lang=css&","dependencies":[{"path":"/Users/wuxingliu/ylz_work/2020/statistics/src/components/ShareDoc.vue","mtime":1598151857000},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/css-loader/dist/cjs.js","mtime":1597766290974},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1598022528944},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/postcss-loader/src/index.js","mtime":1598022528922},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/cache-loader/dist/cjs.js","mtime":1598022527352},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/vue-loader/lib/index.js","mtime":1598022528944}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53cmFwcGVyewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZmxvdzogcm93OwogICAgCn0KLndyYXBwZXItaXRlbXsKICAgIGZsZXg6IDE7Cn0KLndyYXBwZXItaXRlbXsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouZG9jQ2hhcnR7CiAgICBoZWlnaHQ6IDE0MDBweDsKfQouZG9jLXRvdGFsewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogNDUlOwogICAgei1pbmRleDogOTk7Cn0KLmNoYXJ0ewogICAgbWFyZ2luOiAwIGF1dG87CiAgICB3aWR0aDogMTAwJTsKfQoucmFua1RhYmxlewogICAgbWFyZ2luOiAwIGF1dG87Cn0K"},{"version":3,"sources":["ShareDoc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ShareDoc.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"shareDoc\">\n      <div class=\"wrapper\">\n          <div class=\"wrapper-item\">\n              <h1 class=\"doc-total\">总数:{{docTotal}}万</h1>\n              <v-chart class=\"chart docChart\" ref=\"docEcharts\" :options=\"categoryOption\" ></v-chart>\n          </div>\n      </div>\n      <div class=\"wrapper\">\n          <div class=\"wrapper-item\">\n              <v-chart class=\"chart\" ref=\"sexEcharts\" :options=\"sexOption\" ></v-chart>\n          </div>\n          <div class=\"wrapper-item\">\n              <v-chart class=\"chart\" ref=\"dayAveEcharts\" :options=\"dayAveOption\" ></v-chart>\n          </div>\n      </div>\n      <div class=\"wrapper\">\n          <div class=\"wrapper-item\">\n               <h2>诊断排行</h2>\n               <a-table class=\"rankTable\" \n                bordered \n                :rowKey=\"getRowKey\"\n                :columns=\"tableHeader\" \n                :pagination=\"false\" \n                :data-source=\"tableData\"></a-table>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport 'echarts/lib/chart/bar'\nimport 'echarts/lib/component/tooltip'\nimport { fetchShareRank, fetchGender, fetchShareDocumen, fetchShareDocumenByMonth  } from '../api/shareDocApi'\nimport { getRequestData } from '../shared/getRequestData.js'\nexport default {\n    name:\"shareDoc\",\n    data() {\n        return {\n            categoryOption:{},\n            docTotal: 0,\n            docNum:[ 7,2,3,5,6,2,4,6,2,7,2,7,8,2,2,6,9,1,3,2,4,5,1,6,2,3,6,2,1,5,6,3,4,5,3,1,3,5,4,1,2,5,6,3,8,3,5,2,7,1,5,7,2 ],\n            docName:['病理概要', '门（急）诊病历', '急诊留观病历', '西药处方', '中药处方', '检查记录','检验记录'\n                    ,'治疗记录','一般手术记录','麻醉术前访视记录','麻醉记录','麻醉术后访视记录','输血记录','待产记录'\n                    ,'阴道分娩记录','剖宫产记录','一般护理记录','病重（病危）护理记录','手术护理记录','生命体征测量记录'\n                    ,'出入量记录','高值耗材使用记录','入院评估','护理计划','出院评估与指导','手术知情同意书','麻醉知情同意书'\n                    ,'输血治疗同意书','特殊检查及特殊治疗同意书','病危（重）通知书','其他知情告知同意书','住院病案首页'\n                    ,'中医住院病案首页','入院记录','24h内入出院记录','24h内入院死亡记录','首次病程记录','日常病程记录'\n                     ,'上级医师查房记录','疑难病例讨论记录','交接班记录','转科记录','阶段小结','抢救记录','会诊记录'\n                    ,'术前小结','术前讨论','术后首次病程记录','出院记录','死亡记录','死亡病例讨论记录','住院医嘱'\n                    ,'出院小结'],\n            sexOption:{},\n            sexData:[\n                {value: 7, name: '男'},\n                {value: 3, name: '女'},\n            ],\n            dayAveOption:{},\n            dayData: ['2020-03','2020-04','2020-05','2020-06','2020-07','2020-08'],\n            dayAveData: [17,11,15,19,18,11],\n            tableHeader:[\n                {\n                    title: '排名',\n                    dataIndex: 'rank',\n                    width: 80,\n                },\n                {\n                    title: '名称',\n                    dataIndex: 'name',\n                    width: 500,\n                }\n            ],\n            tableData:[\n                {\n                    rank: 1,\n                    name:\"zhangsan\"\n                }\n            ]\n        }\n    },\n    mounted() {\n        this.init()\n    },\n    methods:{\n        init(){\n            this.docEchartsInit()\n            this.sexEchartsInit()\n            this.dayAveEchartsInit()\n            this.rankTableInit()\n        }, \n        async docEchartsInit(){\n            const _this = this\n            const resData = await getRequestData(fetchShareDocumen)()\n            _this.docName = resData.map(item=>{\n                return item.DOC_NAME\n            })\n            _this.docNum = resData.map(item=>{\n                return item.TOTAL\n            })\n            _this.categoryOption = {\n                title: {\n                    text: '文档数量'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    formatter: '{b} <br /> {c}万',\n                    axisPointer: {\n                        type: 'shadow'\n                    }\n                },\n                grid: {\n                    left: '3%',\n                    right: '6%',\n                    top: '4%',\n                    containLabel: true\n                },\n                xAxis: {\n                    type: 'value',\n                    name: '数量/万',\n                },\n                yAxis: {\n                    type: 'category',\n                    data: _this.docName,\n                    name: '名称',\n                    axisLabel: {\n                        interval: 0\n                    }\n                },\n                series: [\n                    {\n                        type: 'bar',\n                        data: _this.docNum,\n                        label: {\n                            show: true,\n                            formatter: '{c} 万',\n                            color: '#000',\n                            position: 'right'\n                        },\n                    }\n                ]\n            }\n            _this.docTotal = _this.docNum.reduce((total,nextValue)=>{\n                return total+nextValue\n            })\n        },\n        async sexEchartsInit(){\n            const _this = this\n            const resData = await getRequestData(fetchGender)()\n            _this.sexData = resData.map(item=>{\n                return {\n                    value:item.TOTAL,\n                    name:item.SEX\n                }\n            })\n            _this.sexOption = {\n                title: {\n                    text: '性别数量图',\n                    subtext: '',\n                    left: 'center'\n                },\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{b} : {c} ({d}%)'\n                },\n                legend: {\n                    orient: 'vertical',\n                    right: '15',\n                    data: ['男', '女']\n                },\n                series: [\n                    {\n                        type: 'pie',\n                        radius: '65%',\n                        center: ['50%', '45%'],\n                        data: _this.sexData,\n                        emphasis: {\n                            itemStyle: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        async dayAveEchartsInit(){\n            const _this = this\n            let resData = await getRequestData(fetchShareDocumenByMonth)()\n            resData = resData.sort((a,b)=>{\n                let aTime = new Date(a.CREATE_TIME)\n                let bTime = new Date(b.CREATE_TIME)\n                return aTime < bTime ? -1 : 1\n            })\n            _this.dayData = resData.map(item=>{\n                return item.CREATE_TIME\n            })\n            _this.dayAveData = resData.map(item=>{\n                return item.TOTAL\n            })\n            _this.dayAveOption = {\n                title: {\n                    text:'月平均图'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'line'\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    data: _this.dayData\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [{\n                    data: _this.dayAveData,\n                    type: 'line'\n                }]\n            }\n        },\n        async rankTableInit(){\n            const _this = this \n            let resData = await getRequestData(fetchShareRank)()\n            resData = resData.sort((a,b)=>{\n                return b.total - a.total\n            })\n            _this.tableData = resData.map((item,index)=>{\n                return {\n                    rank: index + 1,\n                    name: item.name\n                }\n            })\n        },\n        getRowKey(record){\n            return record.rank\n        }\n    }\n\n}\n\n</script>\n<style scoped>\n.wrapper{\n    display: flex;\n    flex-flow: row;\n    \n}\n.wrapper-item{\n    flex: 1;\n}\n.wrapper-item{\n    position: relative;\n}\n.docChart{\n    height: 1400px;\n}\n.doc-total{\n    position: absolute;\n    left: 45%;\n    z-index: 99;\n}\n.chart{\n    margin: 0 auto;\n    width: 100%;\n}\n.rankTable{\n    margin: 0 auto;\n}\n</style>\n\n"]}]}