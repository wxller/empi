{"remainingRequest":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/babel-loader/lib/index.js!/Users/wuxingliu/ylz_work/2020/statistics/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wuxingliu/ylz_work/2020/statistics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wuxingliu/ylz_work/2020/statistics/src/components/Interaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wuxingliu/ylz_work/2020/statistics/src/components/Interaction.vue","mtime":1598154038000},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/cache-loader/dist/cjs.js","mtime":1598022527352},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/babel-loader/lib/index.js","mtime":1597741073441},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/cache-loader/dist/cjs.js","mtime":1598022527352},{"path":"/Users/wuxingliu/ylz_work/2020/statistics/node_modules/vue-loader/lib/index.js","mtime":1598022528944}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3d1eGluZ2xpdS95bHpfd29yay8yMDIwL3N0YXRpc3RpY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBJTlRFUkFDVElPTl9DT0xVTU5TIH0gZnJvbSAnLi4vc2hhcmVkL2RhdGFDb2x1bW5zJzsKaW1wb3J0IHsgcGFyc2VMaW5lRGF0YSB9IGZyb20gJy4uL3NoYXJlZC9wYXJzZUxpbmVEYXRhJzsKaW1wb3J0IEludGVyQWN0aW9uTGluZUNoYXJ0IGZyb20gJy4vSW50ZXJBY3Rpb25MaW5lQ2hhcnQnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCB7IGZldGNoSW50ZXJhY3Rpb25UYWJsZSwgZmV0Y2hJbnRlcmFjdGlvbkxpbmVEYXRhIH0gZnJvbSAnLi4vYXBpL2ludGVyYWN0aW9uQXBpJzsKaW1wb3J0IHsgZ2V0UmVxdWVzdERhdGEgfSBmcm9tICcuLi9zaGFyZWQvZ2V0UmVxdWVzdERhdGEnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ludGVyYWN0aW9uJywKICBjb21wb25lbnRzOiB7CiAgICBJbnRlckFjdGlvbkxpbmVDaGFydDogSW50ZXJBY3Rpb25MaW5lQ2hhcnQKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEludGVyYWN0aW9uVGFibGUoKTsKICAgIHRoaXMuZ2V0SW50ZXJhY3Rpb25MaW5lRGF0YSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGU6IG1vbWVudCgpLAogICAgICBjb2x1bW5zOiBJTlRFUkFDVElPTl9DT0xVTU5TLAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICBsaW5lRGF0YTogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRJbnRlcmFjdGlvblRhYmxlOiBmdW5jdGlvbiBnZXRJbnRlcmFjdGlvblRhYmxlKGRhdGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHllYXIsIG1vbnRoLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKGRhdGUgPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICB5ZWFyID0gbW9tZW50KCkueWVhcigpOwogICAgICAgICAgICAgICAgICBtb250aCA9IG1vbWVudCgpLm1vbnRoKCkgKyAxOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgeWVhciA9IGRhdGUueWVhcigpOwogICAgICAgICAgICAgICAgICBtb250aCA9IGRhdGUubW9udGgoKSArIDE7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0UmVxdWVzdERhdGEoZmV0Y2hJbnRlcmFjdGlvblRhYmxlKSh7CiAgICAgICAgICAgICAgICAgIHllYXI6IHllYXIsCiAgICAgICAgICAgICAgICAgIG1vbnRoOiBtb250aAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICAgICAgX3RoaXMudGFibGVEYXRhID0gcmVzOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0SW50ZXJhY3Rpb25MaW5lRGF0YTogZnVuY3Rpb24gZ2V0SW50ZXJhY3Rpb25MaW5lRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0UmVxdWVzdERhdGEoZmV0Y2hJbnRlcmFjdGlvbkxpbmVEYXRhKSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5saW5lRGF0YSA9IHBhcnNlTGluZURhdGEocmVzLCAnc3VtVG90YWwnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2VuUm93S2V5OiBmdW5jdGlvbiBnZW5Sb3dLZXkocmVjb3JkKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQocmVjb3JkLnNlcnZpY2VOYW1lLCAiLSIpLmNvbmNhdChyZWNvcmQuY291bnRZZWFyLCAiLSIpLmNvbmNhdChyZWNvcmQuY291bnRNb250aCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Interaction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,mBAAA,QAAA,uBAAA;AACA,SAAA,aAAA,QAAA,yBAAA;AACA,OAAA,oBAAA,MAAA,wBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,qBAAA,EAAA,wBAAA,QAAA,uBAAA;AACA,SAAA,cAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,oBAAA,EAAA;AADA,GAFA;AAKA,EAAA,OALA,qBAKA;AACA,SAAA,mBAAA;AACA,SAAA,sBAAA;AACA,GARA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,MAAA,EADA;AAEA,MAAA,OAAA,EAAA,mBAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,+BACA,IADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,oBAAA,IAAA,IAAA,IAAA,EAAA;AACA,kBAAA,IAAA,GAAA,MAAA,GAAA,IAAA,EAAA;AACA,kBAAA,KAAA,GAAA,MAAA,GAAA,KAAA,KAAA,CAAA;AACA,iBAHA,MAGA;AACA,kBAAA,IAAA,GAAA,IAAA,CAAA,IAAA,EAAA;AACA,kBAAA,KAAA,GAAA,IAAA,CAAA,KAAA,KAAA,CAAA;AACA;;AATA;AAAA,uBAWA,cAAA,CAAA,qBAAA,CAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,IAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,iBAAA,CAXA;;AAAA;AAWA,gBAAA,GAXA;AAYA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,GAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KAfA;AAgBA,IAAA,sBAhBA,oCAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,cAAA,CAAA,wBAAA,CAAA,EADA;;AAAA;AACA,gBAAA,GADA;AAEA,gBAAA,MAAA,CAAA,QAAA,GAAA,aAAA,CAAA,GAAA,EAAA,UAAA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAnBA;AAoBA,IAAA,SApBA,qBAoBA,MApBA,EAoBA;AACA,uBAAA,MAAA,CAAA,WAAA,cAAA,MAAA,CAAA,SAAA,cAAA,MAAA,CAAA,UAAA;AACA;AAtBA;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"table-wrapper\">\n    <section class=\"tool-sift\">\n      <a-month-picker placeholder=\"选择年月\" v-model=\"date\" @change=\"getInteractionTable\" />\n    </section>\n    <a-table\n      :scroll=\"{ y: '30vh' }\"\n      :columns=\"columns\"\n      :data-source=\"tableData\"\n      :pagination=\"false\"\n      :rowKey=\"genRowKey\"\n    >\n      <span slot=\"serviceName\" slot-scope=\"text\">{{ text }}</span>\n      <span slot=\"total\"></span>\n      <span slot=\"upstream\"></span>\n      <span slot=\"downstream\"></span>\n      <span slot=\"action\">\n        <a>查看日志</a>\n      </span>\n    </a-table>\n    <InterActionLineChart :data=\"lineData\" />\n  </div>\n</template>\n\n<script>\nimport { INTERACTION_COLUMNS } from '../shared/dataColumns'\nimport { parseLineData } from '../shared/parseLineData'\nimport InterActionLineChart from './InterActionLineChart'\nimport moment from 'moment'\nimport { fetchInteractionTable, fetchInteractionLineData } from '../api/interactionApi'\nimport { getRequestData } from '../shared/getRequestData'\n\nexport default {\n  name: 'Interaction',\n  components: {\n    InterActionLineChart, \n  },\n  mounted() {\n    this.getInteractionTable()\n    this.getInteractionLineData()\n  },\n  data() {\n    return {\n      date: moment(),\n      columns: INTERACTION_COLUMNS,\n      tableData: [],\n      lineData: [],\n    }\n  },\n  methods: {\n    async getInteractionTable(date) {\n      let year\n      let month\n      if (date == null) {\n        year = moment().year()\n        month = moment().month() + 1\n      } else {\n        year = date.year()\n        month = date.month() + 1\n      }\n\n      const res = await getRequestData(fetchInteractionTable)({ year, month })\n      console.log(res);\n      this.tableData = res\n    },\n    async getInteractionLineData() {\n      const res = await getRequestData(fetchInteractionLineData)()\n      this.lineData = parseLineData(res, 'sumTotal')\n    },\n    genRowKey(record) {\n      return `${record.serviceName}-${record.countYear}-${record.countMonth}`\n    },\n  },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.table-wrapper {\n  margin-top: 10px;\n  .tool-sift {\n    display: flex;\n    justify-content: flex-end;\n    margin: 10px 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}